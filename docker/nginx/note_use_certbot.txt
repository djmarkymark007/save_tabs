# Dockerfile
FROM nginx:alpine

# Install certbot
RUN apk add --no-cache certbot

# Copy Nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Create directory for certbot challenges
RUN mkdir -p /var/www/certbot

# Script to renew SSL certificate
COPY renew_cert.sh /etc/periodic/daily/renew_cert
RUN chmod +x /etc/periodic/daily/renew_cert

# Start Nginx and Crond
CMD ["sh", "-c", "crond && nginx -g 'daemon off;'"]

# nginx.conf
events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name example.com;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name example.com;
        
        ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
        
        # Other SSL settings (adjust as needed)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        
        location / {
            proxy_pass http://your_backend_service:port;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}

# renew_cert.sh
#!/bin/sh
certbot renew --webroot -w /var/www/certbot --quiet && nginx -s reload